/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SimpleStorage, SimpleStorageInterface } from "../SimpleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "favoriteNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nameToFavoriteNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "people",
    outputs: [
      {
        internalType: "uint256",
        name: "favoriteNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610973806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e64cec114610067578063471f7cdf146100855780636057361d146100a35780636f760f41146100bf5780638bab8dd5146100db5780639e7a13ad1461010b575b600080fd5b61006f61013c565b60405161007c91906102e1565b60405180910390f35b61008d610145565b60405161009a91906102e1565b60405180910390f35b6100bd60048036038101906100b8919061033c565b61014b565b005b6100d960048036038101906100d491906104af565b610155565b005b6100f560048036038101906100f0919061050b565b6101de565b60405161010291906102e1565b60405180910390f35b6101256004803603810190610120919061033c565b61020c565b6040516101339291906105dc565b60405180910390f35b60008054905090565b60005481565b8060008190555050565b600160405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190816101b49190610818565b505050806002836040516101c89190610926565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6001818154811061021c57600080fd5b90600052602060002090600202016000915090508060000154908060010180546102459061063b565b80601f01602080910402602001604051908101604052809291908181526020018280546102719061063b565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b5050505050905082565b6000819050919050565b6102db816102c8565b82525050565b60006020820190506102f660008301846102d2565b92915050565b6000604051905090565b600080fd5b600080fd5b610319816102c8565b811461032457600080fd5b50565b60008135905061033681610310565b92915050565b60006020828403121561035257610351610306565b5b600061036084828501610327565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103bc82610373565b810181811067ffffffffffffffff821117156103db576103da610384565b5b80604052505050565b60006103ee6102fc565b90506103fa82826103b3565b919050565b600067ffffffffffffffff82111561041a57610419610384565b5b61042382610373565b9050602081019050919050565b82818337600083830152505050565b600061045261044d846103ff565b6103e4565b90508281526020810184848401111561046e5761046d61036e565b5b610479848285610430565b509392505050565b600082601f83011261049657610495610369565b5b81356104a684826020860161043f565b91505092915050565b600080604083850312156104c6576104c5610306565b5b600083013567ffffffffffffffff8111156104e4576104e361030b565b5b6104f085828601610481565b925050602061050185828601610327565b9150509250929050565b60006020828403121561052157610520610306565b5b600082013567ffffffffffffffff81111561053f5761053e61030b565b5b61054b84828501610481565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561058e578082015181840152602081019050610573565b8381111561059d576000848401525b50505050565b60006105ae82610554565b6105b8818561055f565b93506105c8818560208601610570565b6105d181610373565b840191505092915050565b60006040820190506105f160008301856102d2565b818103602083015261060381846105a3565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061065357607f821691505b6020821081036106665761066561060c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610691565b6106d88683610691565b95508019841693508086168417925050509392505050565b6000819050919050565b600061071561071061070b846102c8565b6106f0565b6102c8565b9050919050565b6000819050919050565b61072f836106fa565b61074361073b8261071c565b84845461069e565b825550505050565b600090565b61075861074b565b610763818484610726565b505050565b5b818110156107875761077c600082610750565b600181019050610769565b5050565b601f8211156107cc5761079d8161066c565b6107a684610681565b810160208510156107b5578190505b6107c96107c185610681565b830182610768565b50505b505050565b600082821c905092915050565b60006107ef600019846008026107d1565b1980831691505092915050565b600061080883836107de565b9150826002028217905092915050565b61082182610554565b67ffffffffffffffff81111561083a57610839610384565b5b610844825461063b565b61084f82828561078b565b600060209050601f8311600181146108825760008415610870578287015190505b61087a85826107fc565b8655506108e2565b601f1984166108908661066c565b60005b828110156108b857848901518255600182019150602085019450602081019050610893565b868310156108d557848901516108d1601f8916826107de565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b600061090082610554565b61090a81856108ea565b935061091a818560208601610570565b80840191505092915050565b600061093282846108f5565b91508190509291505056fea2646970667358221220432573e87ca5c647e83614921f2e99faeb57ac3ba127b6641919bf7f4f29748f64736f6c634300080f0033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleStorage> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleStorage {
    return super.attach(address) as SimpleStorage;
  }
  override connect(signer: Signer): SimpleStorage__factory {
    return super.connect(signer) as SimpleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new utils.Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;
  }
}
